"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _defineProperties(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,_toPropertyKey(r.key),r)}}function _createClass(t,e,n){return e&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperty(t,e,n){return(e=_toPropertyKey(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function _toPropertyKey(t){t=_toPrimitive(t,"string");return"symbol"===_typeof(t)?t:String(t)}function _toPrimitive(t,e){if("object"!==_typeof(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0===n)return("string"===e?String:Number)(t);n=n.call(t,e||"default");if("object"!==_typeof(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}var Tokenizer=_createClass(function t(e,n){var r=this;_classCallCheck(this,t),_defineProperty(this,"HTML",'\n\t\t\t\t<div class="tokenizer" >\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input  class=\'form-control error\' type="text" value="" />\n\t\t\t\t\t\t<button type="text" class="btn btn-primary" >\n\t\t\t\t\t\t\t<span>Add</span>\n\t\t\t        \t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<div class="tokens"></div>\n\t\t\t\t</div>\n\t'),_defineProperty(this,"elem",null),_defineProperty(this,"props",null),_defineProperty(this,"onAdd",function(){var t=r.elem.find("input"),e=t.val().trim();r.isValid(e)?(t.val(""),r.props.tokens.push(e),r.update()):t.addClass("error"),t.focus()}),_defineProperty(this,"onRemove",function(t){r.props.tokens.splice(t,1),r.update()}),_defineProperty(this,"onKeyDown",function(t){return r.onEnter(t)}),_defineProperty(this,"render",function(){r.update(),r.elem.find("button").click(r.onAdd),r.elem.find("input").keydown(r.onKeyDown)}),_defineProperty(this,"update",function(){var n=[];r.props.tokens.forEach(function(t,e){t=$(r.getToken(t));t.click(function(){r.onRemove(e)}),n.push(t)}),r.elem.find(".tokens").html(n)}),_defineProperty(this,"onEnter",function(t){"Enter"==t.key&&this.onAdd()}),_defineProperty(this,"throwRequiredError",function(){throw new Error("Tokenizer: tokens option required!")}),_defineProperty(this,"isValid",function(t){return!(null==t||""==t||!this.props.allowDupes&&this.props.tokens.includes(t))}),_defineProperty(this,"getToken",function(t){return'<span  class="token" >\n\t\t\t\t\t\t\t<span>'.concat(t,'</span>\n\t\t\t\t\t\t\t<span class="close-btn" /> \n\t\t\t\t\t </span>')}),n&&n.tokens||this.throwRequiredError(),this.elem=e,this.props=n,this.elem.html(this.HTML),this.render()});$.fn.tokenizer=function(t){return new Tokenizer(this,t)};